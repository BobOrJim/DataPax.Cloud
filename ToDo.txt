Plotta namn tillvänster.





Fulhacka med hårdkod. Senare switchCase ifall jag inte får nåt svar av jimmyHaglund.

Fan. Blazor knapp ger ingen rerender....











1. EventCallback för trigger o spinboxes, skall först update global time och sedan update plot
2. plot, när dess uppate körs har pseudo kod ungefär såhär
If NOT (my startUnixTime = glob startunixtime and endunixtime = globunixtime){
	update min time
	gör en ny plot.
}








[Domain Utgår tillsvidare]








UPPDATERINGS HIRARKI:
TriggerListClick ->
	Träd (plockar kolumnnamn från TriggerDB, typ den är byggd på IO template)  
	GlobalTime start (trigger-2) stop (trigger+2) centreras runt TriggerTime
	Update spinboxes 1-6 ->
		GlobalTime start/stop.
		Update graph (med tidstämpel LastUpdateStartStop property för att undvika 6st updates)
		Update picture stack (med tidstämpel LastUpdateStartStop property för att undvika 6st updates)
Half Forw etc
	Update spinboxes
	-""-

###############################################################################################################################


OBS: kanske kan alla external uppdate utgå...städa kod...


Städa bort template kod.



********
* plotta analoga signaler.
Till Front features
* URL timer grejen.
* Step line chart. Skriv in detta namn i någon kommentar i Front.
* Kanske lägga till färgglidande bakgrund, så som jag gjorde på IQR. Nja troligen för mycket jobb..

Det hade varit läckert med picture filter.....rörelse alltså.

fråga jonathan efter kontakt till yrkeslivet, visa film och fråga vad som är bäst/sämst.

Fyll detta prog med try/catch. och sök på det, just nu finns det ingenting.



        public void Knapp4Test(List<Coordinate> coordinates, string ImagePathPasteTo)
        {
            signalsToPlotQueue.Push(coordinates);
            signalsToPlotQueue.Push(coordinates);
            signalsToPlotQueue.Push(coordinates);
            signalsToPlotQueue.Push(coordinates);
            signalsToPlotQueue.Push(coordinates); //En skall nu falla ur.
            var tmpArray = signalsToPlotQueue.Queue.ToArray();

            //PlotGraphTo(tmpArray[0], ImagePathPasteTo, 3);
            for (int i = 0; i < tmpArray.Length - 1; i++)
            {
                PlotGraphTo(tmpArray[i], ImagePathPasteTo, i);
            }
        }




