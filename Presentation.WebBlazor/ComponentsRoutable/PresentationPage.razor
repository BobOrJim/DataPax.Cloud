@page "/PresentationPage"

@using System
@using System.Diagnostics
@using Application.UseCases
@using Presentation.WebBlazor.ComponentCreation
@using Presentation.WebBlazor
@using Infrastructure.Models
@using Application.Services
@using Infrastructure.DataAccess
@using Application.Models
@using Application

@inject Presentation.WebBlazor.ComponentCreation.NumericTextBoxComponents _NumericTextBoxComponents
@inject Application.UseCases.NumericTextBoxUseCases _NumericTextBoxUseCases
@inject Presentation.WebBlazor.ComponentCreation.ButtonComponents _ButtonComponents
@inject Application.UseCases.ButtonUseCases _ButtonUseCases
@inject Presentation.WebBlazor.ComponentCreation.RangeSliderComponents _RangeSliderComponents
@inject Application.UseCases.RangeSliderUseCases _RangeSliderUseCases
@inject Presentation.WebBlazor.ComponentCreation.ParagraphComponents _ParagraphComponents
@inject Presentation.WebBlazor.ComponentCreation.ImgSrcComponents _ImgSrcComponents
@inject Presentation.WebBlazor.ComponentCreation.TreeViewComponents _TreeViewComponents
@inject Presentation.WebBlazor.ComponentCreation.ClickableListComponents _ClickableListComponents

@inject Infrastructure.DataAccess.EFAccessCam1KeepTable eFAccessCam1KeepTable
@inject Infrastructure.DataAccess.EFAccessCam2KeepTable eFAccessCam2KeepTable
@inject Infrastructure.DataAccess.EFAccessIODeviationTable eFAccessIODeviationTable
@inject Infrastructure.DataAccess.EFAccessIOKeepTable eFAccessIOKeepTable

@code{

    private PictureServiceCam1 pictureServiceCam1;
    private PictureServiceCam2 pictureServiceCam2;
    private IOKeepTableService iOKeepTableService;
    private IODeviationService iODeviationService;

    private PlotService plotService;
    private TreeUpdateUtils treeUpdateUtils;
    private List<TreeNode> TreeNodeList = new List<TreeNode>(); //Kommer länkas ihop med denna blazor komponent: _TreeViewComponents.IOTreeView2Component
    private List<ListItem> ListItemList = new List<ListItem>(); //Kommer länkas ihop med denna blazor komponent: _ClickableListComponents.DeviationListViewComponent
    private TimeController timeController = new TimeController();

    //Method invoked when the component is ready to start, having recieved its initial parameters from its parrent renderer tree
    //1: protected override void OnInitialized()
    //Method invoked after each time the component has been redered
    //2: protected override void OnAfterRender(bool firstRender)
    //Method invoked when the component has recieved parameters from its parent in the renderer tree and the incomming values has been assigned to properties
    //3: protected override void OnParametersSet()
    //4: protected override Task OnParametersSetAsync()
    //Returns a flag to indicate wheter the component should renderer.
    //5: protected override bool ShouldRender()
    protected override void OnInitialized()
    {
        pictureServiceCam1 = new PictureServiceCam1(new PictureDataAccessCam1(eFAccessCam1KeepTable));
        pictureServiceCam2 = new PictureServiceCam2(new PictureDataAccessCam2(eFAccessCam2KeepTable));
        iOKeepTableService = new IOKeepTableService(new IOKeepTableDataAccess(eFAccessIOKeepTable));
        iODeviationService = new IODeviationService(new IODeviationDataAccess(eFAccessIODeviationTable));

        pictureServiceCam1.UpdatePictureStack(); //Denna rad skall senare ersättas med något där tidsobjekt event grej
        pictureServiceCam2.UpdatePictureStack(); //Denna rad skall senare ersättas med något där tidsobjekt event grej
        plotService = new PlotService(); //Här skall jag framöver injecera ett Interface
        treeUpdateUtils = new TreeUpdateUtils();
        //timeController.WriteUnixToSolartime_StartTime();
        //timeController.WriteSolarTimeToUnix_StartTime();
    }

    protected override async Task OnInitializedAsync()
    {
        _NumericTextBoxUseCases.Hej();
        _NumericTextBoxUseCases.DepInjection(_NumericTextBoxComponents);
        _ButtonUseCases.DepInjection(_NumericTextBoxComponents);
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            //Tilldelar träd data från db
            TreeNodeList = iOKeepTableService.IOColumnNamesAsTreeNodes();
            _TreeViewComponents.IOTreeView2Component.TreeNodes = TreeNodeList;
            _TreeViewComponents.IOTreeView2Component.UpdateState();
            //Tilldelar trigger list data från db
            ListItemList = iODeviationService.DeviationListItemList();
            _ClickableListComponents.DeviationListViewComponent.ListItems = ListItemList;
            _ClickableListComponents.DeviationListViewComponent.UpdateState();
            //Tilldelar bilder varsing startbild. Logga skall in här
            _ImgSrcComponents.LeftPicture.PicturePathString = "Logo.jpeg"; //Skall ändras till logga
            _ImgSrcComponents.LeftPicture.UpdateState();
            _ImgSrcComponents.RightPicture.PicturePathString = "Logo.jpeg"; //logga
            _ImgSrcComponents.RightPicture.UpdateState();
        }
    }
    protected override void OnParametersSet()
    {
    }
    //Denna funktion körs av rangeSlider eventCallback funktion. Eftersom jag har 2 objekt av alla objekt (ett som skapas av markup, och ett blazor som jag skapar
    //så måste dessa kopplas samman. Detta görs med @ref, vilket innebär att markup objektet använder mitt objekts inställningar.
    //Därför ligger merparten av denna kod här.
    //Orsaken till att UpdateState ligger här, är för att det finns en bugg(?) i blazor, map på hur grejorna kopplas map lifecycle
    //Dvs, enda sättet att få ett event i tex en rangeSlider, att trigga en rerender av ett paragraph objekt, är att anropa det via denna funktion.

    public void EventCallback_TreeView(TreeNode UserClickedOnThisTreeNode)
    {
        if (UserClickedOnThisTreeNode.Level == 3) //This is a child/leaf.
        {
            Debug.WriteLine($"In EventCallback_TreeView. Denna sträng kommer skickas till RoundRobin = {UserClickedOnThisTreeNode.Name}");
            //Här skall updateStatus till ploter ligga.
        }
        else //This is a Parent. I.E we invert "IsExpanded"
        {
            Debug.WriteLine($"In EventCallback_TreeView. Denna sträng/nod kommer toggla expanded = {UserClickedOnThisTreeNode.Name} ");
            _TreeViewComponents.IOTreeView2Component.TreeNodes = treeUpdateUtils.UpdateNodesToExpandInTree(TreeNodeList, UserClickedOnThisTreeNode);
            _TreeViewComponents.IOTreeView2Component.UpdateState();
        }
    }

    public void EventCallback_ListView(ListItem UserClickedOnThisListItem)
    {
        //Debug.WriteLine($"Listview klick, user clicked on {UserClickedOnThisListItem.Name}");
        timeController.StartTimeUnix = UserClickedOnThisListItem.Timestamp_unix_BIGINT-2000;
        timeController.WriteUnixToSolartime_StartTime();
        timeController.EndTimeUnix = UserClickedOnThisListItem.Timestamp_unix_BIGINT+2000;
        timeController.WriteUnixToSolartime_EndTime();
        WriteTimeControllerToNumericTextBoxes();
    }

    public void ActionEventCallback_LeftPictureRangeSlider()
    {
        _ParagraphComponents.LeftPictureShowNumberOfTotal.FirstString = _RangeSliderComponents.LeftPictureRangeSlider.CurrentValue.ToString() + " / " + _RangeSliderComponents.LeftPictureRangeSlider.MaxValue.ToString();
        _ParagraphComponents.LeftPictureShowNumberOfTotal.UpdateState();
        _ParagraphComponents.LeftPictureTimeStamp.FirstString = pictureServiceCam1.LeftPictureTimestampToShow(_RangeSliderComponents.LeftPictureRangeSlider.CurrentValue).Substring(0, 10);
        _ParagraphComponents.LeftPictureTimeStamp.SecondString = pictureServiceCam1.LeftPictureTimestampToShow(_RangeSliderComponents.LeftPictureRangeSlider.CurrentValue).Substring(pictureServiceCam1.LeftPictureTimestampToShow(_RangeSliderComponents.LeftPictureRangeSlider.CurrentValue).Length - 13);
        _ParagraphComponents.LeftPictureTimeStamp.UpdateState();
        _ImgSrcComponents.LeftPicture.PicturePathString = pictureServiceCam1.LeftPicturePathToShow(_RangeSliderComponents.LeftPictureRangeSlider.CurrentValue);
        _ImgSrcComponents.LeftPicture.UpdateState();
    }

    public void ActionEventCallback_RightPictureRangeSlider()
    {
        _ParagraphComponents.RightPictureShowNumberOfTotal.FirstString = _RangeSliderComponents.RightPictureRangeSlider.CurrentValue.ToString() + " / " + _RangeSliderComponents.RightPictureRangeSlider.MaxValue.ToString();
        _ParagraphComponents.RightPictureShowNumberOfTotal.UpdateState();
        _ParagraphComponents.RightPictureTimeStamp.FirstString = pictureServiceCam2.RightPictureTimestampToShow(_RangeSliderComponents.RightPictureRangeSlider.CurrentValue).Substring(0, 10);
        _ParagraphComponents.RightPictureTimeStamp.SecondString = pictureServiceCam2.RightPictureTimestampToShow(_RangeSliderComponents.RightPictureRangeSlider.CurrentValue).Substring(pictureServiceCam2.RightPictureTimestampToShow(_RangeSliderComponents.RightPictureRangeSlider.CurrentValue).Length - 13);
        _ParagraphComponents.RightPictureTimeStamp.UpdateState();
        _ImgSrcComponents.RightPicture.PicturePathString = pictureServiceCam2.RightPicturePathToShow(_RangeSliderComponents.RightPictureRangeSlider.CurrentValue);
        _ImgSrcComponents.RightPicture.UpdateState();
    }

    public void EventCallback_NumericTextBoxesStartAndStopTime()
    {
        //Debug.WriteLine($"1 = {timeController.StartSecond}");
        //Debug.WriteLine($"2 = {_NumericTextBoxComponents.StartTimeSecond.CurrentValue}");
        //timeController.StartSecond = _NumericTextBoxComponents.StartTimeSecond.CurrentValue;
        //Debug.WriteLine($"3 = {timeController.StartSecond}");
        //Debug.WriteLine($"4 = {_NumericTextBoxComponents.StartTimeSecond.CurrentValue}");
        WriteNumericTextBoxesToTimeController();
        UpdatePlot();
    }

    public void WriteTimeControllerToNumericTextBoxes()
    {
        _NumericTextBoxComponents.StartTimeYear.CurrentValue = timeController.StartYear;
        _NumericTextBoxComponents.StartTimeMonth.CurrentValue = timeController.StartMonth;
        _NumericTextBoxComponents.StartTimeDay.CurrentValue = timeController.StartDay;
        _NumericTextBoxComponents.StartTimeHour.CurrentValue = timeController.StartHour;
        _NumericTextBoxComponents.StartTimeMinute.CurrentValue = timeController.StartMinute;
        _NumericTextBoxComponents.StartTimeSecond.CurrentValue = timeController.StartSecond;
        _NumericTextBoxComponents.EndTimeYear.CurrentValue = timeController.EndYear;
        _NumericTextBoxComponents.EndTimeMonth.CurrentValue = timeController.EndMonth;
        _NumericTextBoxComponents.EndTimeDay.CurrentValue = timeController.EndDay;
        _NumericTextBoxComponents.EndTimeHour.CurrentValue = timeController.EndHour;
        _NumericTextBoxComponents.EndTimeMinute.CurrentValue = timeController.EndMinute;
        _NumericTextBoxComponents.EndTimeSecond.CurrentValue = timeController.EndSecond;
    }

    public void WriteNumericTextBoxesToTimeController()
    {
        //Debug.WriteLine($"In WriteNumericTextBoxesToTimeController. timeController.StartTimeUnix = {timeController.StartTimeUnix}");
        timeController.StartYear = _NumericTextBoxComponents.StartTimeYear.CurrentValue;
        timeController.StartMonth = _NumericTextBoxComponents.StartTimeMonth.CurrentValue;
        timeController.StartDay = _NumericTextBoxComponents.StartTimeDay.CurrentValue;
        timeController.StartHour = _NumericTextBoxComponents.StartTimeHour.CurrentValue;
        timeController.StartMinute = _NumericTextBoxComponents.StartTimeMinute.CurrentValue;
        timeController.StartSecond = _NumericTextBoxComponents.StartTimeSecond.CurrentValue;
        timeController.WriteSolarTimeToUnix_StartTime();
        //Debug.WriteLine($"In WriteNumericTextBoxesToTimeController. timeController.StartTimeUnix = {timeController.StartTimeUnix}");
        timeController.EndYear = _NumericTextBoxComponents.EndTimeYear.CurrentValue;
        timeController.EndMonth = _NumericTextBoxComponents.EndTimeMonth.CurrentValue;
        timeController.EndDay = _NumericTextBoxComponents.EndTimeDay.CurrentValue;
        timeController.EndHour = _NumericTextBoxComponents.EndTimeHour.CurrentValue;
        timeController.EndMinute = _NumericTextBoxComponents.EndTimeMinute.CurrentValue;
        timeController.EndSecond = _NumericTextBoxComponents.EndTimeSecond.CurrentValue;
        timeController.WriteSolarTimeToUnix_EndTime();
        //Debug.WriteLine($"In WriteNumericTextBoxesToTimeController. timeController.EndTimeUnix = {timeController.EndTimeUnix}");
    }


    public void UpdatePlot()
    {
        Debug.WriteLine("UpdatePlot körs");
        //Debug.WriteLine(timeController.StartTimeUnix);
        //Debug.WriteLine(timeController.EndTimeUnix);

        plotService.ResetPlot();
        Int64 First = timeController.StartTimeUnix;                                                                         //Text utmed X-axel
        Int64 Second = timeController.StartTimeUnix + (timeController.EndTimeUnix - timeController.StartTimeUnix) / 2;      //Text utmed X-axel
        Int64 Third = timeController.EndTimeUnix;                                                                           //Text utmed X-axel
        plotService.PlotXAxisTo(First, Second, Third, "wwwroot/PlotWorkCanvas.jpeg");

        //Kolla om det finns något i mitt kösystem. om det finns något så skall jag plotta det.

        List<XYValuePair> XYValuePairsList = iOKeepTableService.GetXYValuePairFromSignalBetween("HEJ_Name", timeController.StartTimeUnix, timeController.EndTimeUnix);
        Debug.WriteLine($"In UpdatePlot. XYValuePairsList.Count = {XYValuePairsList.Count}");

        List<Coordinate> CoordinateList = plotService.CreateCoordinateList(XYValuePairsList); //IMPORTANT, THIS FUNCTION INJECT FAKE CORDINATES TO MAKE A STEP CURVE, DONT REMOVE


        //plotService.PlotGraphTo(CoordinateList, "wwwroot/PlotWorkCanvas.jpeg", 0);
        //plotService.PlotGraphTo(CoordinateList, "wwwroot/PlotWorkCanvas.jpeg", 1);
        //plotService.PlotGraphTo(CoordinateList, "wwwroot/PlotWorkCanvas.jpeg", 2);
        //plotService.PlotGraphTo(CoordinateList, "wwwroot/PlotWorkCanvas.jpeg", 3);
        //_ImgSrcComponents.Plot.PicturePathString = "PlotWorkCanvas.jpeg" + "?" + DateTime.Now.Ticks;
        //_ImgSrcComponents.Plot.UpdateState();
    }

    public void Knapp1()
    {
        timeController.StartTimeUnix = timeController.StartTimeUnix - 4000;
        timeController.WriteUnixToSolartime_StartTime();
        timeController.EndTimeUnix = timeController.EndTimeUnix - 4000;
        timeController.WriteUnixToSolartime_EndTime();
        WriteTimeControllerToNumericTextBoxes();
    }
    public void Knapp2()
    {
        timeController.StartTimeUnix = timeController.StartTimeUnix - 2000;
        timeController.WriteUnixToSolartime_StartTime();
        timeController.EndTimeUnix = timeController.EndTimeUnix - 2000;
        timeController.WriteUnixToSolartime_EndTime();
        WriteTimeControllerToNumericTextBoxes();
    }
    public void Knapp3()
    {
        timeController.StartTimeUnix = timeController.StartTimeUnix + 2000;
        timeController.WriteUnixToSolartime_StartTime();
        timeController.EndTimeUnix = timeController.EndTimeUnix + 2000;
        timeController.WriteUnixToSolartime_EndTime();
        WriteTimeControllerToNumericTextBoxes();

    }
    public void Knapp4()
    {
        //LÅNE KNAPP
        UpdatePlot();

        //timeController.StartTimeUnix = timeController.StartTimeUnix + 4000;
        //timeController.WriteUnixToSolartime_StartTime();
        //timeController.EndTimeUnix = timeController.EndTimeUnix + 4000;
        //timeController.WriteUnixToSolartime_EndTime();
        //WriteTimeControllerToNumericTextBoxes();
        }
}



<div class="grid-container">
    <div class="Row1">
        <div class="Row1Col1">
            <!-- SignalTreeView -->
            <TreeView2Component CssClassStyle="MyInvisibleButton"
                                @ref="_TreeViewComponents.IOTreeView2Component"
                                MyCallback="EventCallback_TreeView" />
        </div>
        <div class="Row1Col2">
            <ClickableListComponent CssClassStyle="MyInvisibleButton"
                                    @ref="_ClickableListComponents.DeviationListViewComponent"
                                    MyCallback="EventCallback_ListView" />
        </div>
        <div class="Row1Col3">
            <!-- LeftPicture -->
            <ImgSrcComponent CssClassStyle="MyAutoSizeKeepRatio" @ref="_ImgSrcComponents.LeftPicture" />
        </div>
        <div class="Row1Col4">
            <!-- RightPicture -->
            <ImgSrcComponent CssClassStyle="MyAutoSizeKeepRatio" @ref="_ImgSrcComponents.RightPicture" />
        </div>
    </div>
    <div class="Row2">
        <div class="Row2Col1">
            <!-- -->
            <p>Row2Col1</p>
        </div>
        <div class="Row2Col2">
            <!-- -->
            <p>Row2Col2</p>
        </div>
        <div class="Row2Col3">
            <!-- -->
            <p>Row2Col3</p>
        </div>
        <div class="Row2Col4">
            <ParagraphComponent CssClassStyle="My5" @ref="_ParagraphComponents.LeftPictureTimeStamp" />
        </div>
        <div class="Row2Col5">
            <!-- Space -->
        </div>
        <div class="Row2Col6">
            <ParagraphComponent CssClassStyle="My5" @ref="_ParagraphComponents.LeftPictureShowNumberOfTotal" />
        </div>
        <div class="Row2Col7">
            <ParagraphComponent CssClassStyle="My5" @ref="_ParagraphComponents.RightPictureTimeStamp" />
        </div>
        <div class="Row2Col8">
            <!-- Space -->
        </div>
        <div class="Row2Col9">
            <ParagraphComponent CssClassStyle="My5" @ref="_ParagraphComponents.RightPictureShowNumberOfTotal" />
        </div>
    </div>

    <div class="Row3">
        <div class="Row3Col1">
            <!-- Space -->
        </div>
        <div class="Row3Col2">
            <!-- DeviationYear -->
            <NumericTextBoxComponent CssClassStyle="My5"
                                     @ref="_NumericTextBoxComponents.DeviationYear"
                                     ThisComponentInstanceName="_NumericTextBoxComponents.DeviationYear"
                                     MinValue="20"
                                     MaxValue="30"
                                     ActionEventCallback="_NumericTextBoxUseCases.DeviationYearValueChangedEvent">
            </NumericTextBoxComponent>
        </div>
        <div class="Row3Col3">
            <!-- DeviationMonth -->
            <NumericTextBoxComponent CssClassStyle="My5"
                                     @ref="_NumericTextBoxComponents.DeviationMonth"
                                     ThisComponentInstanceName="_NumericTextBoxComponents.DeviationYear"
                                     MinValue="1"
                                     MaxValue="12"
                                     ActionEventCallback="_NumericTextBoxUseCases.DeviationMonthValueChangedEvent">
            </NumericTextBoxComponent>
        </div>
        <div class="Row3Col4">
            <!-- DeviationDay -->
            <NumericTextBoxComponent CssClassStyle="My5"
                                     @ref="_NumericTextBoxComponents.DeviationDay"
                                     ThisComponentInstanceName="_NumericTextBoxComponents.DeviationYear"
                                     MinValue="1"
                                     MaxValue="31"
                                     ActionEventCallback="_NumericTextBoxUseCases.DeviationDayValueChangedEvent">
            </NumericTextBoxComponent>
        </div>

        <div class="Row3Col5">
            <!-- DeviationTimePeriod -->
            PLACEHOLDER
        </div>
        <div class="Row3Col6">
            <!-- LeftPictureSlider  -->
            <RangeSliderComponent CssClassStyle="My5"
                                  @ref="_RangeSliderComponents.LeftPictureRangeSlider"
                                  MinValue="1"
                                  MaxValue="@pictureServiceCam1.NumberOfPicturesInStack()"
                                  ActionEventCallback="ActionEventCallback_LeftPictureRangeSlider" />
        </div>
        <div class="Row3Col7">
            <!-- RightPictureSlider-->
            <RangeSliderComponent CssClassStyle="My5"
                                  @ref="_RangeSliderComponents.RightPictureRangeSlider"
                                  MinValue="1"
                                  MaxValue="@pictureServiceCam2.NumberOfPicturesInStack()"
                                  ActionEventCallback="ActionEventCallback_RightPictureRangeSlider" />
        </div>
    </div>

    <div class="Row4">
        <div class="Row4Col1">
            <!-- Luft Row4Col1-->
        </div>
        <div class="Row4Col2">
            <!-- MakeLeftSyncMasterCheckBox -->
            <p>Row4Col2</p>
        </div>
        <div class="Row4Col3">
            <!-- Luft -->
            <p>Row4Col3</p>
        </div>
        <div class="Row4Col4">
            <!-- MakeRightSyncMasterCheckBox -->
            <p>Row4Col4</p>
        </div>
        <div class="Row4Col5">
            <!-- Luft -->
            <p>Row4Col5</p>
        </div>
    </div>





    <div class="Row5">
        <div class="Row5Col1">
            <!-- StartTimeYear -->
            <NumericTextBoxComponent CssClassStyle="My5"
                                     @ref="_NumericTextBoxComponents.StartTimeYear"
                                     ThisComponentInstanceName="_NumericTextBoxComponents.StartTimeYear"
                                     MinValue="20"
                                     MaxValue="30"
                                     ActionEventCallback="EventCallback_NumericTextBoxesStartAndStopTime">
            </NumericTextBoxComponent>
        </div>
        <div class="Row5Col2">
            <!-- StartTimeMonth -->
            <NumericTextBoxComponent CssClassStyle="My5"
                                     @ref="_NumericTextBoxComponents.StartTimeMonth"
                                     ThisComponentInstanceName="_NumericTextBoxComponents.StartTimeMonth"
                                     MinValue="1"
                                     MaxValue="12"
                                     ActionEventCallback="EventCallback_NumericTextBoxesStartAndStopTime">
            </NumericTextBoxComponent>
        </div>
        <div class="Row5Col3">
            <!-- StartTimeDay -->
            <NumericTextBoxComponent CssClassStyle="My5"
                                     @ref="_NumericTextBoxComponents.StartTimeDay"
                                     ThisComponentInstanceName="_NumericTextBoxComponents.StartTimeDay"
                                     MinValue="1"
                                     MaxValue="31"
                                     ActionEventCallback="EventCallback_NumericTextBoxesStartAndStopTime">
            </NumericTextBoxComponent>
        </div>
        <div class="Row5Col4">
            <!-- StartTimeHour -->
            <NumericTextBoxComponent CssClassStyle="My5"
                                     @ref="_NumericTextBoxComponents.StartTimeHour"
                                     ThisComponentInstanceName="_NumericTextBoxComponents.StartTimeHour"
                                     MinValue="0"
                                     MaxValue="23"
                                     ActionEventCallback="EventCallback_NumericTextBoxesStartAndStopTime">
            </NumericTextBoxComponent>
        </div>
        <div class="Row5Col5">
            <!-- StartTimeMinute -->
            <NumericTextBoxComponent CssClassStyle="My5"
                                     @ref="_NumericTextBoxComponents.StartTimeMinute"
                                     ThisComponentInstanceName="_NumericTextBoxComponents.StartTimeMinute"
                                     MinValue="0"
                                     MaxValue="59"
                                     ActionEventCallback="EventCallback_NumericTextBoxesStartAndStopTime">
            </NumericTextBoxComponent>
        </div>
        <div class="Row5Col6">
            <!-- StartTimeSecond -->
            <NumericTextBoxComponent CssClassStyle="My5"
                                     @ref="_NumericTextBoxComponents.StartTimeSecond"
                                     ThisComponentInstanceName="_NumericTextBoxComponents.StartTimeSecond"
                                     MinValue="0"
                                     MaxValue="59"
                                     ActionEventCallback="EventCallback_NumericTextBoxesStartAndStopTime">
            </NumericTextBoxComponent>
        </div>
        <div class="Row5Col7">
            <!-- FullBack -->
            <ButtonComponent CssClassStyle="My5 btn-primary"
                             @ref="_ButtonComponents.FullBack"
                             ButtonText="1"
                             MyCallback="Knapp1">
            </ButtonComponent>
        </div>
        <div class="Row5Col8">
            <!-- HalfBack -->
            <ButtonComponent CssClassStyle="My5 btn-primary"
                             @ref="_ButtonComponents.HalfBack"
                             ButtonText="2"
                             MyCallback="Knapp2">
            </ButtonComponent>
        </div>
        <div class="Row5Col9">
            <!-- HalfForw-->
            <ButtonComponent CssClassStyle="My5 btn-primary"
                             @ref="_ButtonComponents.HalfForw"
                             ButtonText="3"
                             MyCallback="Knapp3">
            </ButtonComponent>
        </div>
        <div class="Row5Col10">
            <!-- FullForw -->
            <ButtonComponent CssClassStyle="My5 btn-primary"
                             @ref="_ButtonComponents.FullForw"
                             ButtonText="4"
                             MyCallback="Knapp4">
            </ButtonComponent>
        </div>
        <div class="Row5Col11">
            <!-- EndTimeYear -->


            <NumericTextBoxComponent CssClassStyle="My5"
                                     @ref="_NumericTextBoxComponents.EndTimeYear"
                                     ThisComponentInstanceName="_NumericTextBoxComponents.EndTimeYear"
                                     MinValue="20"
                                     MaxValue="30"
                                     ActionEventCallback="EventCallback_NumericTextBoxesStartAndStopTime">
            </NumericTextBoxComponent>
        </div>
        <div class="Row5Col12">
            <!-- EndTimeMonth -->
            <NumericTextBoxComponent CssClassStyle="My5"
                                     @ref="_NumericTextBoxComponents.EndTimeMonth"
                                     ThisComponentInstanceName="_NumericTextBoxComponents.EndTimeMonth"
                                     MinValue="1"
                                     MaxValue="12"
                                     ActionEventCallback="EventCallback_NumericTextBoxesStartAndStopTime">
            </NumericTextBoxComponent>
        </div>
        <div class="Row5Col13">
            <!-- EndTimeDay -->
            <NumericTextBoxComponent CssClassStyle="My5"
                                     @ref="_NumericTextBoxComponents.EndTimeDay"
                                     ThisComponentInstanceName="_NumericTextBoxComponents.EndTimeDay"
                                     MinValue="1"
                                     MaxValue="31"
                                     ActionEventCallback="EventCallback_NumericTextBoxesStartAndStopTime">
            </NumericTextBoxComponent>
        </div>
        <div class="Row5Col14">
            <!-- EndTimeHour -->
            <NumericTextBoxComponent CssClassStyle="My5"
                                     @ref="_NumericTextBoxComponents.EndTimeHour"
                                     ThisComponentInstanceName="_NumericTextBoxComponents.EndTimeHour"
                                     MinValue="1"
                                     MaxValue="31"
                                     ActionEventCallback="EventCallback_NumericTextBoxesStartAndStopTime">
            </NumericTextBoxComponent>
        </div>
        <div class="Row5Col15">
            <!-- EndTimeMinute -->
            <NumericTextBoxComponent CssClassStyle="My5"
                                     @ref="_NumericTextBoxComponents.EndTimeMinute"
                                     ThisComponentInstanceName="_NumericTextBoxComponents.EndTimeMinute"
                                     MinValue="1"
                                     MaxValue="31"
                                     ActionEventCallback="EventCallback_NumericTextBoxesStartAndStopTime">
            </NumericTextBoxComponent>
        </div>
        <div class="Row5Col16">
            <!-- EndTimeSecond -->
            <NumericTextBoxComponent CssClassStyle="My5"
                                     @ref="_NumericTextBoxComponents.EndTimeSecond"
                                     ThisComponentInstanceName="_NumericTextBoxComponents.EndTimeSecond"
                                     MinValue="1"
                                     MaxValue="31"
                                     ActionEventCallback="EventCallback_NumericTextBoxesStartAndStopTime">
            </NumericTextBoxComponent>
        </div>
    </div>

    <div class="Row6">
        <div class="Row6Col1">
            <!-- Plot -->
            <ImgSrcComponent CssClassStyle="MyAutoSizeKeepRatio" @ref="_ImgSrcComponents.Plot" />
        </div>
    </div>
</div>


