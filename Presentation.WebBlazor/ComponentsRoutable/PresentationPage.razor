@page "/PresentationPage"

@using System
@using System.Diagnostics
@using Application.UseCases
@using Presentation.WebBlazor.ComponentCreation
@using Presentation.WebBlazor
@using Infrastructure.Models
@using Application.Services
@using Infrastructure.DataAccess
@using Application.Models
@using Application 

@inject Presentation.WebBlazor.ComponentCreation.NumericTextBoxComponents _NumericTextBoxComponents
@inject Application.UseCases.NumericTextBoxUseCases _NumericTextBoxUseCases

@inject Presentation.WebBlazor.ComponentCreation.ButtonComponents _ButtonComponents
@inject Application.UseCases.ButtonUseCases _ButtonUseCases

@inject Presentation.WebBlazor.ComponentCreation.RangeSliderComponents _RangeSliderComponents
@inject Application.UseCases.RangeSliderUseCases _RangeSliderUseCases

@inject Presentation.WebBlazor.ComponentCreation.ParagraphComponents _ParagraphComponents

@inject Presentation.WebBlazor.ComponentCreation.ImgSrcComponents _ImgSrcComponents

@inject Presentation.WebBlazor.ComponentCreation.TreeViewComponents _TreeViewComponents

@inject Infrastructure.DataAccess.EFAccess _EFAccess



@code{

    private PictureService pictureService;
    private IOService iOService;
    private PlotService plotService;
    public TreeUpdateUtils treeUpdateUtils;
    public string GlobalPath = "ASDF";
    public List<string> IONameList = new List<string>(); //Work data, skall hämtas från IOService senare.
    private List<TreeNode> TreeNodeList = new List<TreeNode>();
    public static TestComponent MyTestComponent;// = new TestComponent();

    //Method invoked when the component is ready to start, having recieved its initial parameters from its parrent renderer tree
    //1: protected override void OnInitialized()
    //Method invoked after each time the component has been redered
    //2: protected override void OnAfterRender(bool firstRender)
    //Method invoked when the component has recieved parameters from its parent in the renderer tree and the incomming values has been assigned to properties
    //3: protected override void OnParametersSet()
    //4: protected override Task OnParametersSetAsync()
    //Returns a flag to indicate wheter the component should renderer.
    //5: protected override bool ShouldRender()
    protected override void OnInitialized()
    {

        pictureService = new PictureService(new PictureDataAccess(_EFAccess));
        plotService = new PlotService(); //Här skall jag framöver injecera ett Interface 

        //Debug.WriteLine($"OnInitialized : Bilder i stack är : {pictureService.NumberOfPicturesInStack()} ");
        pictureService.UpdatePictureStack(); //Denna rad skall senare ersättas med något där tidsobjekt event grej
        iOService = new IOService();
        iOService.IOColumnNamesAsTreeNodes();
        treeUpdateUtils = new TreeUpdateUtils();

    }
    public static void injectParagraph(TestComponent _MyTestComponent)
    {
        MyTestComponent = _MyTestComponent;
        Debug.WriteLine("injectParagraph körs nu ");
    }
    protected override async Task OnInitializedAsync()
    {
        //Debug.WriteLine($"Dep inject ");
        _NumericTextBoxUseCases.Hej();
        _NumericTextBoxUseCases.DepInjection(_NumericTextBoxComponents);
        _ButtonUseCases.DepInjection(_NumericTextBoxComponents);
    }
    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            TreeNodeList = iOService.IOColumnNamesAsTreeNodes();
            _TreeViewComponents.IOTreeView2Component.TreeNodes = TreeNodeList;
            _TreeViewComponents.IOTreeView2Component.UpdateState();
            _ImgSrcComponents.LeftPicture.PicturePathString = "a.jpeg"; //Skall ändras till glad gubbe, eller något annat trevligt.
            _ImgSrcComponents.LeftPicture.UpdateState();
            _ImgSrcComponents.RightPicture.PicturePathString = "PlotStartCanvas.jpeg"; //Skall ändras till glad gubbe, eller något annat trevligt.
            _ImgSrcComponents.RightPicture.UpdateState();
        }
    }
    protected override void OnParametersSet()
    {
    }
    //Denna funktion körs av rangeSlider eventCallback funktion. Eftersom jag har 2 objekt av alla objekt (ett som skapas av markup, och ett blazor som jag skapar
    //så måste dessa kopplas samman. Detta görs med @ref, vilket innebär att markup objektet använder mitt objekts inställningar.
    //Därför ligger merparten av denna kod här.
    //Orsaken till att UpdateState ligger här, är för att det finns en bugg(?) i blazor, map på hur grejorna kopplas map lifecycle
    //Dvs, enda sättet att få ett event i tex en rangeSlider, att trigga en rerender av ett paragraph objekt, är att anropa det via denna funktion.
    public void ActionEventCallback_LeftPictureRangeSlider()
    {
        _ParagraphComponents.LeftPictureShowNumberOfTotal.FirstString = _RangeSliderComponents.LeftPictureRangeSlider.CurrentValue.ToString() + " / " + _RangeSliderComponents.LeftPictureRangeSlider.MaxValue.ToString();
        _ParagraphComponents.LeftPictureShowNumberOfTotal.UpdateState();
        _ParagraphComponents.LeftPictureTimeStamp.FirstString = pictureService.LeftPictureTimestampToShow(_RangeSliderComponents.LeftPictureRangeSlider.CurrentValue).Substring(0, 10);
        _ParagraphComponents.LeftPictureTimeStamp.SecondString = pictureService.LeftPictureTimestampToShow(_RangeSliderComponents.LeftPictureRangeSlider.CurrentValue).Substring(pictureService.LeftPictureTimestampToShow(_RangeSliderComponents.LeftPictureRangeSlider.CurrentValue).Length - 13);
        _ParagraphComponents.LeftPictureTimeStamp.UpdateState();
        _ImgSrcComponents.LeftPicture.PicturePathString = pictureService.LeftPicturePathToShow(_RangeSliderComponents.LeftPictureRangeSlider.CurrentValue);
        _ImgSrcComponents.LeftPicture.UpdateState();
    }
    public void ActionEventCallback_RightPictureRangeSlider()
    {
        _ParagraphComponents.RightPictureShowNumberOfTotal.FirstString = _RangeSliderComponents.RightPictureRangeSlider.CurrentValue.ToString() + " / " + _RangeSliderComponents.RightPictureRangeSlider.MaxValue.ToString();
        _ParagraphComponents.RightPictureShowNumberOfTotal.UpdateState();
        _ParagraphComponents.RightPictureTimeStamp.FirstString = pictureService.RightPictureTimestampToShow(_RangeSliderComponents.RightPictureRangeSlider.CurrentValue).Substring(0, 10);
        _ParagraphComponents.RightPictureTimeStamp.SecondString = pictureService.RightPictureTimestampToShow(_RangeSliderComponents.RightPictureRangeSlider.CurrentValue).Substring(pictureService.RightPictureTimestampToShow(_RangeSliderComponents.RightPictureRangeSlider.CurrentValue).Length - 13);
        _ParagraphComponents.RightPictureTimeStamp.UpdateState();
        _ImgSrcComponents.RightPicture.PicturePathString = pictureService.RightPicturePathToShow(_RangeSliderComponents.RightPictureRangeSlider.CurrentValue);
        _ImgSrcComponents.RightPicture.UpdateState();
    }
    public void EventCallback_TreeView(TreeNode UserClickedOnThisTreeNode)
    {
        if (UserClickedOnThisTreeNode.Level == 3) //This is a child/leaf.
        {
            Debug.WriteLine($"In EventCallback_TreeView. Denna sträng kommer skickas till RoundRobin = {UserClickedOnThisTreeNode.Name}");
            //Här skall updateStatus till ploter ligga.
        }
        else //This is a Parent. I.E we invert "IsExpanded"
        {
            Debug.WriteLine($"In EventCallback_TreeView. Denna sträng/nod kommer toggla expanded = {UserClickedOnThisTreeNode.Name} ");
            _TreeViewComponents.IOTreeView2Component.TreeNodes = treeUpdateUtils.UpdateNodesToExpandInTree(TreeNodeList, UserClickedOnThisTreeNode);
            _TreeViewComponents.IOTreeView2Component.UpdateState();
        }
    }

    public void Knapp1() //Restart
    {
        plotService.ResetPlot();
        _ImgSrcComponents.Plot.PicturePathString = "PlotWorkCanvas.jpeg" + "?" + DateTime.Now.Ticks;
        _ImgSrcComponents.Plot.UpdateState();
    }
    public void Knapp2() //Ritar in X axel.
    {
        List<Int64> list1 = new List<Int64>() { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
        plotService.PlotXAxisTo(list1, "wwwroot/PlotWorkCanvas.jpeg");

        _ImgSrcComponents.Plot.PicturePathString = "PlotWorkCanvas.jpeg" + "?" + DateTime.Now.Ticks;
        _ImgSrcComponents.Plot.UpdateState();
    }

    public void Knapp3() //ritar in första kurvan
    {
        List<Int64> xlist = new List<Int64>() {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}; //Simulerad data från DB
        List<Boolean> ylist = new List<Boolean>() {true, false, true, false, false, false, false, true, true, true}; //Simulerad data från DB
        List<Coordinate> CoordinateList = plotService.CreateCoordinateList(xlist, ylist);
        plotService.PlotGraphTo(CoordinateList, "wwwroot/PlotWorkCanvas.jpeg", 3);
        CoordinateList.Clear();


        _ImgSrcComponents.Plot.PicturePathString = "PlotWorkCanvas.jpeg" + "?" + DateTime.Now.Ticks;
        _ImgSrcComponents.Plot.UpdateState();
    }


    public void Knapp4() //Knapp 4
    {
        List<Int64> xlist = new List<Int64>() { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }; //Simulerad data från DB
        List<Boolean> ylist = new List<Boolean>() { true, false, true, false, false, false, false, true, true, true }; //Simulerad data från DB
        List<Coordinate> CoordinateList = plotService.CreateCoordinateList(xlist, ylist);
        plotService.Knapp4Test(CoordinateList, "wwwroot/PlotWorkCanvas.jpeg");

        _ImgSrcComponents.Plot.PicturePathString = "PlotWorkCanvas.jpeg" + "?" + DateTime.Now.Ticks;
        _ImgSrcComponents.Plot.UpdateState();
        Debug.WriteLine("Knapp4");
    }




}



<div class="grid-container">
    <div class="Row1">
        <div class="Row1Col1">
            <!-- SignalTreeView -->
            <TreeView2Component CssClassStyle="MyInvisibleButton"
                                @ref="_TreeViewComponents.IOTreeView2Component"
                                MyCallback="EventCallback_TreeView"
                                />



        </div>
        <div class="Row1Col2">
            <!-- DeviationListView -->
            @*<TreeViewComponent>

                </TreeViewComponent>*@
        </div>
        <div class="Row1Col3">
            <!-- LeftPicture -->
            <ImgSrcComponent CssClassStyle="MyAutoSizeKeepRatio" @ref="_ImgSrcComponents.LeftPicture" />
        </div>
        <div class="Row1Col4">
            <!-- RightPicture -->
            <ImgSrcComponent CssClassStyle="MyAutoSizeKeepRatio" @ref="_ImgSrcComponents.RightPicture" />
        </div>
    </div>
    <div class="Row2">
        <div class="Row2Col1">
            <!-- -->
            <p>Row2Col1</p>
        </div>
        <div class="Row2Col2">
            <!-- -->
            <p>Row2Col2</p>
        </div>
        <div class="Row2Col3">
            <!-- -->
            <p>Row2Col3</p>
        </div>
        <div class="Row2Col4">
            <ParagraphComponent CssClassStyle="My5" @ref="_ParagraphComponents.LeftPictureTimeStamp" />
        </div>
        <div class="Row2Col5">
            <!-- Space -->
        </div>
        <div class="Row2Col6">
            <ParagraphComponent CssClassStyle="My5" @ref="_ParagraphComponents.LeftPictureShowNumberOfTotal" />
        </div>
        <div class="Row2Col7">
            <ParagraphComponent CssClassStyle="My5" @ref="_ParagraphComponents.RightPictureTimeStamp" />
        </div>
        <div class="Row2Col8">
            <!-- Space -->
        </div>
        <div class="Row2Col9">
            <ParagraphComponent CssClassStyle="My5" @ref="_ParagraphComponents.RightPictureShowNumberOfTotal" />
        </div>
    </div>

    <div class="Row3">
        <div class="Row3Col1">
            <!-- Space -->
        </div>
        <div class="Row3Col2">
            <!-- DeviationYear -->
            <NumericTextBoxComponent CssClassStyle="My5"
                                     @ref="_NumericTextBoxComponents.DeviationYear"
                                     ThisComponentInstanceName="_NumericTextBoxComponents.DeviationYear"
                                     MinValue="20"
                                     MaxValue="30"
                                     ActionEventCallback="_NumericTextBoxUseCases.DeviationYearValueChangedEvent">
            </NumericTextBoxComponent>
        </div>
        <div class="Row3Col3">
            <!-- DeviationMonth -->
            <NumericTextBoxComponent CssClassStyle="My5"
                                     @ref="_NumericTextBoxComponents.DeviationMonth"
                                     ThisComponentInstanceName="_NumericTextBoxComponents.DeviationYear"
                                     MinValue="1"
                                     MaxValue="12"
                                     ActionEventCallback="_NumericTextBoxUseCases.DeviationMonthValueChangedEvent">
            </NumericTextBoxComponent>
        </div>
        <div class="Row3Col4">
            <!-- DeviationDay -->
            <NumericTextBoxComponent CssClassStyle="My5"
                                     @ref="_NumericTextBoxComponents.DeviationDay"
                                     ThisComponentInstanceName="_NumericTextBoxComponents.DeviationYear"
                                     MinValue="1"
                                     MaxValue="31"
                                     ActionEventCallback="_NumericTextBoxUseCases.DeviationDayValueChangedEvent">
            </NumericTextBoxComponent>
        </div>

        <div class="Row3Col5">
            <!-- DeviationTimePeriod -->
            <div class="dropdown">
                <span>Mouse over me</span>
                <div class="dropdown-content">
                    <p>Hello World!</p>
                </div>
            </div>
        </div>
        <div class="Row3Col6">
            <!-- LeftPictureSlider  -->
            <RangeSliderComponent CssClassStyle="My5"
                                  @ref="_RangeSliderComponents.LeftPictureRangeSlider"
                                  MinValue="1"
                                  MaxValue="@pictureService.NumberOfPicturesInStack()"
                                  ActionEventCallback="ActionEventCallback_LeftPictureRangeSlider" />
        </div>
        <div class="Row3Col7">
            <!-- RightPictureSlider-->
            <RangeSliderComponent CssClassStyle="My5"
                                  @ref="_RangeSliderComponents.RightPictureRangeSlider"
                                  MinValue="1"
                                  MaxValue="@pictureService.NumberOfPicturesInStack()"
                                  ActionEventCallback="ActionEventCallback_RightPictureRangeSlider" />
        </div>
    </div>

    <div class="Row4">
        <div class="Row4Col1">
            <!-- Luft Row4Col1-->
        </div>
        <div class="Row4Col2">
            <!-- MakeLeftSyncMasterCheckBox -->
            <p>Row4Col2</p>
        </div>
        <div class="Row4Col3">
            <!-- Luft -->
            <p>Row4Col3</p>
        </div>
        <div class="Row4Col4">
            <!-- MakeRightSyncMasterCheckBox -->
            <p>Row4Col4</p>
        </div>
        <div class="Row4Col5">
            <!-- Luft -->
            <p>Row4Col5</p>
        </div>
    </div>





    <div class="Row5">
        <div class="Row5Col1">
            <!-- StartTimeYear -->
            <NumericTextBoxComponent CssClassStyle="My5"
                                     @ref="_NumericTextBoxComponents.StartTimeYear"
                                     ThisComponentInstanceName="_NumericTextBoxComponents.StartTimeYear"
                                     MinValue="20"
                                     MaxValue="30"
                                     ActionEventCallback="_NumericTextBoxUseCases.StartTimeYearValueChangedEvent">
            </NumericTextBoxComponent>
        </div>
        <div class="Row5Col2">
            <!-- StartTimeMonth -->
            <NumericTextBoxComponent CssClassStyle="My5"
                                     @ref="_NumericTextBoxComponents.StartTimeMonth"
                                     ThisComponentInstanceName="_NumericTextBoxComponents.StartTimeMonth"
                                     MinValue="1"
                                     MaxValue="12"
                                     ActionEventCallback="_NumericTextBoxUseCases.StartTimeMonthValueChangedEvent">
            </NumericTextBoxComponent>
        </div>
        <div class="Row5Col3">
            <!-- StartTimeDay -->
            <NumericTextBoxComponent CssClassStyle="My5"
                                     @ref="_NumericTextBoxComponents.StartTimeDay"
                                     ThisComponentInstanceName="_NumericTextBoxComponents.StartTimeDay"
                                     MinValue="1"
                                     MaxValue="31"
                                     ActionEventCallback="_NumericTextBoxUseCases.StartTimeDayValueChangedEvent">
            </NumericTextBoxComponent>
        </div>
        <div class="Row5Col4">
            <!-- StartTimeHour -->
            <NumericTextBoxComponent CssClassStyle="My5"
                                     @ref="_NumericTextBoxComponents.StartTimeHour"
                                     ThisComponentInstanceName="_NumericTextBoxComponents.StartTimeHour"
                                     MinValue="0"
                                     MaxValue="23"
                                     ActionEventCallback="_NumericTextBoxUseCases.StartTimeHourValueChangedEvent">
            </NumericTextBoxComponent>
        </div>
        <div class="Row5Col5">
            <!-- StartTimeMinute -->
            <NumericTextBoxComponent CssClassStyle="My5"
                                     @ref="_NumericTextBoxComponents.StartTimeMinute"
                                     ThisComponentInstanceName="_NumericTextBoxComponents.StartTimeMinute"
                                     MinValue="0"
                                     MaxValue="59"
                                     ActionEventCallback="_NumericTextBoxUseCases.StartTimeMinuteValueChangedEvent">
            </NumericTextBoxComponent>
        </div>
        <div class="Row5Col6">
            <!-- StartTimeSecond -->
            <NumericTextBoxComponent CssClassStyle="My5"
                                     @ref="_NumericTextBoxComponents.StartTimeSecond"
                                     ThisComponentInstanceName="_NumericTextBoxComponents.StartTimeSecond"
                                     MinValue="0"
                                     MaxValue="59"
                                     ActionEventCallback="_NumericTextBoxUseCases.StartTimeSecondValueChangedEvent">
            </NumericTextBoxComponent>
        </div>
        <div class="Row5Col7">
            <!-- FullBack -->
            <ButtonComponent CssClassStyle="My5 btn-primary"
                             @ref="_ButtonComponents.FullBack"
                             ButtonText="1"
                             ActionEventCallback="Knapp1">
            </ButtonComponent>
        </div>
        <div class="Row5Col8">
            <!-- HalfBack -->
            <ButtonComponent CssClassStyle="My5 btn-primary"
                             @ref="_ButtonComponents.HalfBack"
                             ButtonText="2"
                             ActionEventCallback="Knapp2">
            </ButtonComponent>
        </div>
        <div class="Row5Col9">
            <!-- HalfForw-->
            <ButtonComponent CssClassStyle="My5 btn-primary"
                             @ref="_ButtonComponents.HalfForw"
                             ButtonText="3"
                             ActionEventCallback="Knapp3">
            </ButtonComponent>
        </div>
        <div class="Row5Col10">
            <!-- FullForw -->
            <ButtonComponent CssClassStyle="My5 btn-primary"
                             @ref="_ButtonComponents.FullForw"
                             ButtonText="4"
                             ActionEventCallback="Knapp4">
            </ButtonComponent>
        </div>
        <div class="Row5Col11">
            <!-- EndTimeYear -->
            <NumericTextBoxComponent CssClassStyle="My5"
                                     @ref="_NumericTextBoxComponents.EndTimeYear"
                                     ThisComponentInstanceName="_NumericTextBoxComponents.EndTimeYear"
                                     MinValue="20"
                                     MaxValue="30"
                                     ActionEventCallback="_NumericTextBoxUseCases.EndTimeYearValueChangedEvent">
            </NumericTextBoxComponent>
        </div>
        <div class="Row5Col12">
            <!-- EndTimeMonth -->
            <NumericTextBoxComponent CssClassStyle="My5"
                                     @ref="_NumericTextBoxComponents.EndTimeMonth"
                                     ThisComponentInstanceName="_NumericTextBoxComponents.EndTimeMonth"
                                     MinValue="1"
                                     MaxValue="12"
                                     ActionEventCallback="_NumericTextBoxUseCases.EndTimeMonthValueChangedEvent">
            </NumericTextBoxComponent>
        </div>
        <div class="Row5Col13">
            <!-- EndTimeDay -->
            <NumericTextBoxComponent CssClassStyle="My5"
                                     @ref="_NumericTextBoxComponents.EndTimeDay"
                                     ThisComponentInstanceName="_NumericTextBoxComponents.EndTimeDay"
                                     MinValue="1"
                                     MaxValue="31"
                                     ActionEventCallback="_NumericTextBoxUseCases.EndTimeDayValueChangedEvent">
            </NumericTextBoxComponent>
        </div>
        <div class="Row5Col14">
            <!-- EndTimeHour -->
            <NumericTextBoxComponent CssClassStyle="My5"
                                     @ref="_NumericTextBoxComponents.EndTimeHour"
                                     ThisComponentInstanceName="_NumericTextBoxComponents.EndTimeHour"
                                     MinValue="1"
                                     MaxValue="31"
                                     ActionEventCallback="_NumericTextBoxUseCases.EndTimeHourValueChangedEvent">
            </NumericTextBoxComponent>
        </div>
        <div class="Row5Col15">
            <!-- EndTimeMinute -->
            <NumericTextBoxComponent CssClassStyle="My5"
                                     @ref="_NumericTextBoxComponents.EndTimeMinute"
                                     ThisComponentInstanceName="_NumericTextBoxComponents.EndTimeMinute"
                                     MinValue="1"
                                     MaxValue="31"
                                     ActionEventCallback="_NumericTextBoxUseCases.EndTimeMinuteValueChangedEvent">
            </NumericTextBoxComponent>
        </div>
        <div class="Row5Col16">
            <!-- EndTimeSecond -->
            <NumericTextBoxComponent CssClassStyle="My5"
                                     @ref="_NumericTextBoxComponents.EndTimeSecond"
                                     ThisComponentInstanceName="_NumericTextBoxComponents.EndTimeSecond"
                                     MinValue="1"
                                     MaxValue="31"
                                     ActionEventCallback="_NumericTextBoxUseCases.EndTimeSecondValueChangedEvent">
            </NumericTextBoxComponent>
        </div>
    </div>

    <div class="Row6">
        <div class="Row6Col1"> <!-- Plot -->
            <ImgSrcComponent CssClassStyle="MyAutoSizeKeepRatio" @ref="_ImgSrcComponents.Plot" />
        </div>
    </div>
</div>


